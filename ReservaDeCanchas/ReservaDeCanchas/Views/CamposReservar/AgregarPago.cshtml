@model ReservaDeCanchas.Negocio.ViewModels.PagoViewModel

@{
    ViewBag.Title = "Agregar Pago";
}

<h2>Agregar Pago</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Agregar Pago</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if(ViewBag.resultado != null)
        { 
            if (ViewBag.resultado)
            {
                <div class="alert alert-success alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong>Muy bien!</strong> Se agrego Correctamente el pago.
                </div>
            }
            else
            {
                <div class="alert alert-success alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong>OPS!</strong> Hubo un problema al ingresar su pago.
                </div>
            }
        }
        <div class="form-group">
            @Html.LabelFor(model => model.idReserva, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idReserva, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idReserva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tipoPago, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tipoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.monto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MontoFaltante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MontoFaltante, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MontoFaltante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
